name: Package and deploy Lambda + API-PROD

on:
    push:
        branches: ['main']

jobs:
    package_lambda_to_s3:
        name: Package and upload script to S3
        runs-on: ubuntu-latest
        steps:
            - name: AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: ${{ secrets.AWS_REGION }}

            - uses: actions/checkout@v5
            - name: Package and upload lambda code to S3
              env:
                S3_BUCKET: ${{ secrets.S3_BUCKET_PROD }}
                S3_PATH:   ${{ secrets.S3_PATH_PROD }}
              run: |
                zip function.zip synthesize.py
                aws s3 cp function.zip s3://$S3_BUCKET/$S3_PATH/function.zip

            - uses: actions/checkout@v5
            - name: Upload sample text to S3
              env:
                S3_BUCKET: ${{ secrets.S3_BUCKET_PROD }}
                S3_PATH:   ${{ secrets.S3_PATH_PROD }}
              run: |
                aws s3 cp speech.txt s3://$S3_BUCKET/$S3_PATH/speech.txt

    deploy_to_prod_job:
      name: Deploy lambda to prod environment
      runs-on: ubuntu-latest
      needs: package_lambda_to_s3
      steps:

        # Configure AWS credentials

        - name: AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id:      ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region:             ${{ secrets.AWS_REGION }}
        
        # Deploy to beta 
        - uses: aws-actions/setup-sam@v2
          with:
            use-installer: true
        - uses: actions/checkout@v5
        - name: Deploy lambda to prod environment
          env:
            S3_BUCKET: ${{ secrets.S3_BUCKET_PROD }}
            S3_PATH:   ${{ secrets.S3_PATH_PROD }}
          run: |
            sam deploy \
              --stack-name ${{ secrets.CF_STACK_NAME_PROD }} \
              --template-file infrastructure/cloudformation/template-prod.yml \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameter-overrides \
                LambdaFunctionName=${{ secrets.LAMBDA_NAME_PROD }} \
                LambdaCodeBucket=${{ secrets.S3_BUCKET_PROD }} \
                LambdaCodeKey=${{ secrets.S3_PATH_PROD }}/function.zip \
                ApiStageName=prod \
                S3Bucket=${{ secrets.S3_BUCKET_PROD }} \
                S3BucketPrefix=${{ secrets.S3_PATH_PROD }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Smoke test Lambda (proxy-style event)
          env:
            LAMBDA_NAME: ${{ secrets.LAMBDA_NAME_BETA }}
          run: |
            set -euo pipefail
            # Build an HTTP API v2 event with payload from tests/payload.json
            printf '{"version":"2.0","routeKey":"POST /synthesize","rawPath":"/synthesize","headers":{"content-type":"application/json"},"body":%s,"isBase64Encoded":false}\n' \
              "$(jq -c . tests/payload.json)" > event.json

            aws lambda invoke \
              --function-name "$LAMBDA_NAME" \
              --cli-binary-format raw-in-base64-out \
              --payload fileb://event.json out.json

            cat out.json